<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>gdb调试与valgrind检测内存泄漏</title>
    <url>/2022/05/03/gdb%E8%B0%83%E8%AF%95%E4%B8%8Evalgrind%E6%A3%80%E6%B5%8B%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/</url>
    <content><![CDATA[<h1 id="使用gdb调试代码"><a href="#使用gdb调试代码" class="headerlink" title="使用gdb调试代码"></a>使用gdb调试代码</h1><p>示例代码：test.c</p>
<figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C"><span class="hljs-comment">// test.c</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">sumN</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span><br>&#123;<br>    <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>,i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>;i &lt; n;i++)&#123;<br>        sum += i;<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">long</span> result = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">100</span>;i++)&#123;<br>        result += i;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;result[1-100] = %d\n&quot;</span>,result);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;result[1-200] = %d\n&quot;</span>,sumN(<span class="hljs-number">200</span>));<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[root@localhost memleaktest]<span class="hljs-comment"># ls</span><br>test.c<br><span class="hljs-comment"># 一般编译指令，目标文件为test</span><br>[root@localhost memleaktest]<span class="hljs-comment"># gcc test.c -o test</span><br><span class="hljs-comment"># 需要使用gdb进行调试程序，因此在编译的时候需要加上-g</span><br>[root@localhost memleaktest]<span class="hljs-comment"># gcc -g test.c -o test</span><br><span class="hljs-comment"># 执行程序，查看输出</span><br>[root@localhost memleaktest]<span class="hljs-comment"># ./test </span><br>result[1-100] = 5050<br>result[1-200] = 19900<br></code></pre></div></td></tr></table></figure>

<h1 id="gdb的跟踪调试功能"><a href="#gdb的跟踪调试功能" class="headerlink" title="gdb的跟踪调试功能"></a>gdb的跟踪调试功能</h1><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 使用gdb调试</span><br>[root@localhost memleaktest]<span class="hljs-comment"># gdb ./test</span><br><br>GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-120.el7<br>Copyright (C) 2013 Free Software Foundation, Inc.<br>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;<br>This is free software: you are free to change and redistribute it.<br>There is NO WARRANTY, to the extent permitted by law.  Type <span class="hljs-string">&quot;show copying&quot;</span><br>and <span class="hljs-string">&quot;show warranty&quot;</span> <span class="hljs-keyword">for</span> details.<br>This GDB was configured as <span class="hljs-string">&quot;x86_64-redhat-linux-gnu&quot;</span>.<br>For bug reporting instructions, please see:<br>&lt;http://www.gnu.org/software/gdb/bugs/&gt;...<br>Reading symbols from /mnt/memleaktest/test...done.  <span class="hljs-comment"># 符号表已经读取</span><br><br><span class="hljs-comment"># 设置断点</span><br><span class="hljs-comment"># 将断点设置在函数入口  `break 函数名`</span><br>(gdb) <span class="hljs-built_in">break</span> sumN<br>Breakpoint 1 at 0x400534: file test.c, line 5. // 断点设置在了文件第五行<br><br><span class="hljs-comment"># 在某一行设置断点 `b 行号`</span><br>(gdb) b 10<br>Breakpoint 2 at 0x400559: file test.c, line 10.<br><br><span class="hljs-comment"># 设置断点后执行程序 run或者r</span><br>(gdb) r<br>Starting program: /mnt/memleaktest/./test <br>result[1-100] = 5050<br><br>Breakpoint 1, sumN (n=200) at test.c:5<br>5	    int <span class="hljs-built_in">sum</span> = 0,i;  <span class="hljs-comment"># 停留在第一个断点处</span><br><br><span class="hljs-comment"># next 或者 step 可以执行下一步</span><br>(gdb) next<br>6	    <span class="hljs-keyword">for</span>(i = 0;i &lt; n;i++)&#123;<br><br><span class="hljs-comment"># 直接回车，可以自动执行上一次输入的命令</span><br>(gdb) <br>7	        <span class="hljs-built_in">sum</span> += i;<br>(gdb) <br>6	    <span class="hljs-keyword">for</span>(i = 0;i &lt; n;i++)&#123;<br>(gdb) <br>7	        <span class="hljs-built_in">sum</span> += i;<br><br><span class="hljs-comment"># 查看变量的值 print 或者 p</span><br>(gdb) <span class="hljs-built_in">print</span> <span class="hljs-built_in">sum</span><br><span class="hljs-variable">$1</span> = 0<br>(gdb) p i<br><span class="hljs-variable">$2</span> = 1<br><br><span class="hljs-comment"># setp和next的区别</span><br><span class="hljs-comment"># step可以进入函数调用的内部</span><br><span class="hljs-comment"># next遇到函数调用会直接返回函数调用之后的状态</span><br>(gdb) step<br>6	    <span class="hljs-keyword">for</span>(i = 0;i &lt; n;i++)&#123;<br>(gdb) <br>7	        <span class="hljs-built_in">sum</span> += i;<br><br><span class="hljs-comment"># 在调试多进程时</span><br><span class="hljs-comment"># 多进程时一般调用fork，因此需要区分进程父进程和子进程</span><br>(gdb) <span class="hljs-built_in">set</span> follow-fork-mode parent <span class="hljs-comment"># 调试父进程 </span><br>(gdb) <span class="hljs-built_in">set</span> follow-fork-mode child <span class="hljs-comment"># 调试子进程 </span><br><br><span class="hljs-comment"># 多线程情况</span><br><span class="hljs-comment"># info threads #可以查看所有线程</span><br>(gdb) info threads <br>  Id   Target Id         Frame <br>* 1    process 6403 <span class="hljs-string">&quot;test&quot;</span> sumN (n=200) at test.c:7<br><br><span class="hljs-comment"># 切换线程：thread id</span><br>(gdb) thread 1<br>[Switching to thread 1 (process 6403)]<br><span class="hljs-comment">#0  sumN (n=200) at test.c:7</span><br>7	        <span class="hljs-built_in">sum</span> += i;<br><br><span class="hljs-comment"># 退出quit或者q</span><br>(gdb) q<br>A debugging session is active.<br><br>	Inferior 1 [process 6403] will be killed.<br><br>Quit anyway? (y or n) y<br></code></pre></div></td></tr></table></figure>

<h1 id="使用gdb分析crash"><a href="#使用gdb分析crash" class="headerlink" title="使用gdb分析crash"></a>使用gdb分析crash</h1><p>示例代码：crash.c，改代码尝试修改常量字符串！</p>
<figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C"><span class="hljs-comment">// crash.c</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">core_test</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-type">char</span> * str = <span class="hljs-string">&quot;test&quot;</span>;<br>    str[<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;T&#x27;</span>;<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-type">int</span> i = <span class="hljs-number">10</span>;<br>    core_test();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[root@localhost memleaktest]<span class="hljs-comment"># ls</span><br>crash.c  <span class="hljs-built_in">test</span>  test.c<br>[root@localhost memleaktest]<span class="hljs-comment"># gcc -g crash.c -o crash</span><br>[root@localhost memleaktest]<span class="hljs-comment"># ls</span><br>crash  crash.c  <span class="hljs-built_in">test</span>  test.c<br>[root@localhost memleaktest]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 执行程序</span><br>[root@localhost memleaktest]<span class="hljs-comment"># ./crash </span><br>段错误(吐核)<br><br><span class="hljs-comment"># 不使用gdb时，可以做简要分析</span><br>[root@localhost memleaktest]<span class="hljs-comment"># cd /var/log/</span><br>[root@localhost <span class="hljs-built_in">log</span>]<span class="hljs-comment"># ls</span><br>anaconda           grubby_prune_debug  spooler-20211024<br>audit              lastlog             spooler-20211116<br>boot.log           maillog             spooler-20220306<br>boot.log-20211008  maillog-20211022    tallylog<br>boot.log-20211010  maillog-20211024    tuned<br>boot.log-20211012  maillog-20211116    vmware-network.1.log<br>boot.log-20211022  maillog-20220306    vmware-network.2.log<br>boot.log-20211024  messages            vmware-network.3.log<br>boot.log-20211116  messages-20211022   vmware-network.4.log<br>boot.log-20220306  messages-20211024   vmware-network.5.log<br>btmp               messages-20211116   vmware-network.6.log<br>btmp-20220306      messages-20220306   vmware-network.7.log<br>chrony             rabbitmq            vmware-network.8.log<br>cron               rhsm                vmware-network.9.log<br>cron-20211022      secure              vmware-network.log<br>cron-20211024      secure-20211022     vmware-vgauthsvc.log.0<br>cron-20211116      secure-20211024     vmware-vmsvc-root.log<br>cron-20220306      secure-20211116     vmware-vmtoolsd-root.log<br>dmesg              secure-20220306     wtmp<br>dmesg.old          spooler             yum.log<br>firewalld          spooler-20211022    yum.log-20220306<br><br><span class="hljs-comment"># 查看message的末尾几行</span><br>[root@localhost <span class="hljs-built_in">log</span>]<span class="hljs-comment"># tail messages</span><br>Apr 25 01:23:54 localhost systemd-logind: New session 4 of user root.<br>Apr 25 01:23:54 localhost systemd: Started Session 4 of user root.<br>Apr 25 01:25:07 localhost systemd-logind: New session 5 of user root.<br>Apr 25 01:25:07 localhost systemd: Started Session 5 of user root.<br>Apr 25 01:25:40 localhost systemd-logind: Removed session 1.<br>Apr 25 01:32:24 localhost kernel: crash[8272]: segfault at 4005c1 ip 0000000000400501 sp 00007ffee0f8b690 error 7 <span class="hljs-keyword">in</span> crash[400000+1000]<br><span class="hljs-comment"># error 7 用二进程表示，意为 111；</span><br><span class="hljs-comment"># 第0位为0时，表示内存页找不到，为1时表示保护错误</span><br><span class="hljs-comment"># 第1位为0时，表示读内存发生错误，为1表示写内存发生错误</span><br><span class="hljs-comment"># 第2位为0时，表示错误发生在内核空间，为1表示发生在用户空间</span><br>Apr 25 01:32:24 localhost abrt-hook-ccpp: Process 8272 (crash) of user 0 killed by SIGSEGV - dumping core<br>Apr 25 01:32:26 localhost abrt-server: Executable <span class="hljs-string">&#x27;/mnt/memleaktest/crash&#x27;</span> doesnt belong to any package and ProcessUnpackaged is <span class="hljs-built_in">set</span> to <span class="hljs-string">&#x27;no&#x27;</span><br>Apr 25 01:32:26 localhost abrt-server: <span class="hljs-string">&#x27;post-create&#x27;</span> on <span class="hljs-string">&#x27;/var/spool/abrt/ccpp-2022-04-25-01:32:24-8272&#x27;</span> exited with 1<br>Apr 25 01:32:26 localhost abrt-server: Deleting problem directory <span class="hljs-string">&#x27;/var/spool/abrt/ccpp-2022-04-25-01:32:24-8272&#x27;</span><br><br><br><span class="hljs-comment"># 查看coredump 文件</span><br>[root@localhost <span class="hljs-built_in">log</span>]<span class="hljs-comment"># cd /mnt/memleaktest/</span><br>[root@localhost memleaktest]<span class="hljs-comment"># ls</span><br>crash  crash.c  <span class="hljs-built_in">test</span>  test.c<br><span class="hljs-comment"># 有时不会产生coredump文件,查看 ulimit -a</span><br>[root@localhost memleaktest]<span class="hljs-comment"># ulimit -a</span><br>core file size          (blocks, -c) 0   <span class="hljs-comment"># 大小为0，则不生成</span><br>data seg size           (kbytes, -d) unlimited<br>scheduling priority             (-e) 0<br>file size               (blocks, -f) unlimited<br>pending signals                 (-i) 7183<br>max locked memory       (kbytes, -l) 64<br>max memory size         (kbytes, -m) unlimited<br>open files                      (-n) 4096<br>pipe size            (512 bytes, -p) 8<br>POSIX message queues     (bytes, -q) 819200<br>real-time priority              (-r) 0<br>stack size              (kbytes, -s) 8192<br>cpu time               (seconds, -t) unlimited<br>max user processes              (-u) 7183<br>virtual memory          (kbytes, -v) unlimited<br>file locks                      (-x) unlimited<br><br><span class="hljs-comment"># 打开</span><br>[root@localhost memleaktest]<span class="hljs-comment"># ulimit -c unlimited</span><br><br><span class="hljs-comment"># 再次执行后，生成coredump文件</span><br>[root@localhost memleaktest]<span class="hljs-comment"># ./crash </span><br>段错误(吐核)<br>[root@localhost memleaktest]<span class="hljs-comment"># ls</span><br>core.9256  crash  crash.c  <span class="hljs-built_in">test</span>  test.c<br><br><span class="hljs-comment"># 使用gdb查看coredump</span><br><span class="hljs-comment"># gdb 程序名 coredump文件名</span><br>[root@localhost memleaktest]<span class="hljs-comment"># gdb crash core.9256 </span><br>GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-120.el7<br>Copyright (C) 2013 Free Software Foundation, Inc.<br>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;<br>This is free software: you are free to change and redistribute it.<br>There is NO WARRANTY, to the extent permitted by law.  Type <span class="hljs-string">&quot;show copying&quot;</span><br>and <span class="hljs-string">&quot;show warranty&quot;</span> <span class="hljs-keyword">for</span> details.<br>This GDB was configured as <span class="hljs-string">&quot;x86_64-redhat-linux-gnu&quot;</span>.<br>For bug reporting instructions, please see:<br>&lt;http://www.gnu.org/software/gdb/bugs/&gt;...<br>Reading symbols from /mnt/memleaktest/crash...done.<br>[New LWP 9256]<br>Core was generated by <span class="hljs-string">&#x27;./crash&#x27;</span>.<br>Program terminated with signal 11, Segmentation fault.<br><span class="hljs-comment">#0  0x0000000000400501 in core_test () at crash.c:6</span><br>6           str[1] = <span class="hljs-string">&#x27;T&#x27;</span>;<br><br><span class="hljs-comment"># bt 或者 where 命令，可以查看函数调用过程</span><br>(gdb) bt<br><span class="hljs-comment">#0  0x0000000000400501 in core_test () at crash.c:6</span><br><span class="hljs-comment">#1  0x000000000040051b in main () at crash.c:13</span><br>(gdb) <span class="hljs-built_in">where</span><br><span class="hljs-comment">#0  0x0000000000400501 in core_test () at crash.c:6</span><br><span class="hljs-comment">#1  0x000000000040051b in main () at crash.c:13</span><br><br><span class="hljs-comment"># 在coredump文件中查看变量的值</span><br><span class="hljs-comment"># 每调用一个函数都会调用一个栈空间</span><br>(gdb) <span class="hljs-built_in">print</span> i<br>No symbol <span class="hljs-string">&quot;i&quot;</span> <span class="hljs-keyword">in</span> current context.   <span class="hljs-comment"># i在main中</span><br>(gdb) f 1                           <span class="hljs-comment"># 跳到main层</span><br><span class="hljs-comment">#1  0x000000000040051b in main () at crash.c:13</span><br>13          core_test();<br>(gdb) p i                           <span class="hljs-comment"># 正确查看</span><br><span class="hljs-variable">$1</span> = 10<br></code></pre></div></td></tr></table></figure>

<h1 id="内存泄露"><a href="#内存泄露" class="headerlink" title="内存泄露"></a>内存泄露</h1><h2 id="什么是内存泄漏"><a href="#什么是内存泄漏" class="headerlink" title="什么是内存泄漏"></a>什么是内存泄漏</h2><ol>
<li>进程的虚拟内存在不断增加<br><img src="/img/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F1.PNG" alt="内存泄漏1"></li>
<li>原因：malloc&#x2F;new申请内存后没有调用free&#x2F;delete释放内存</li>
</ol>
<h2 id="内存泄漏的问题"><a href="#内存泄漏的问题" class="headerlink" title="内存泄漏的问题"></a>内存泄漏的问题</h2><ol>
<li>占用虚拟内存</li>
<li>堆上的内存会不断地被占用</li>
</ol>
<h2 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h2><ol>
<li>如何判断是否有内存泄漏</li>
<li>如何判断代码的哪一行存在内存泄漏</li>
<li>肉眼难以发现</li>
<li>哪一个指针造成的内存泄漏</li>
</ol>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol>
<li>valgrand&#x2F;mtrace</li>
<li>使用工具之前怀疑内存泄漏（使用工具的前提）</li>
</ol>
<h2 id="判断是否有内存泄漏"><a href="#判断是否有内存泄漏" class="headerlink" title="判断是否有内存泄漏"></a>判断是否有内存泄漏</h2><p>malloc一次+1，free一次-1；进程退出时，total !&#x3D; 0，则有内存泄漏</p>
<h1 id="valgrind检测内存泄漏"><a href="#valgrind检测内存泄漏" class="headerlink" title="valgrind检测内存泄漏"></a>valgrind检测内存泄漏</h1><p>示例代码：leak.c，改代码有内存泄漏，越界等问题！</p>
<figure class="highlight cpp"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs cpp"><span class="hljs-comment">// leak.c</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">leakfun</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> * pInt = (<span class="hljs-type">int</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">10</span> * <span class="hljs-built_in">sizeof</span>(<span class="hljs-type">int</span>));<br>    *(pInt + <span class="hljs-number">10</span>) = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">leakfun</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[root@localhost memleaktest]<span class="hljs-comment"># ls</span><br>core.9256  crash  crash.c  leak.c  <span class="hljs-built_in">test</span>  test.c<br>[root@localhost memleaktest]<span class="hljs-comment"># gcc -g leak.c -o leak</span><br>[root@localhost memleaktest]<span class="hljs-comment"># ./leak            //执行程序无崩溃</span><br><br>[root@localhost memleaktest]<span class="hljs-comment"># valgrind --tool=memcheck --leak-check=full --trace-children=yes --log-file=analysis.%p ./leak</span><br><span class="hljs-comment"># --trace-children=yes  多进程检测子进程</span><br><span class="hljs-comment"># --log-file=analysis.%p  分析结果以log形式保存，%p为进程号</span><br><br>[root@localhost memleaktest]<span class="hljs-comment"># ls</span><br>analysis.10781  core.9256  crash  crash.c  leak  leak.c  <span class="hljs-built_in">test</span>  test.c<br><br><span class="hljs-comment"># 查看报告</span><br>[root@localhost memleaktest]<span class="hljs-comment"># cat analysis.10781 </span><br>==10781== Memcheck, a memory error detector<br>==10781== Copyright (C) 2002-2017, and GNU GPLd, by Julian Seward et al.<br>==10781== Using Valgrind-3.15.0 and LibVEX; rerun with -h <span class="hljs-keyword">for</span> copyright info<br>==10781== Command: ./leak<br>==10781== Parent PID: 7555<br>==10781== <br>==10781== Invalid write of size 4        <span class="hljs-comment"># 4字节无效的写（越界）</span><br>==10781==    at 0x40054B: leakfun (leak.c:7)<br>==10781==    by 0x40055C: main (leak.c:13)<br>==10781==  Address 0x5205068 is 0 bytes after a block of size 40 allocd<br>==10781==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)<br>==10781==    by 0x40053E: leakfun (leak.c:6)<br>==10781==    by 0x40055C: main (leak.c:13)<br>==10781== <br>==10781== <br>==10781== HEAP SUMMARY:<br>==10781==     <span class="hljs-keyword">in</span> use at <span class="hljs-built_in">exit</span>: 40 bytes <span class="hljs-keyword">in</span> 1 blocks          <span class="hljs-comment"># 分配了40个字节</span><br>==10781==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated<br>==10781== <br>==10781== 40 bytes <span class="hljs-keyword">in</span> 1 blocks are definitely lost <span class="hljs-keyword">in</span> loss record 1 of 1 <span class="hljs-comment"># 泄漏了40个字节</span><br>==10781==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)<br>==10781==    by 0x40053E: leakfun (leak.c:6)<br>==10781==    by 0x40055C: main (leak.c:13)<br>==10781== <br>==10781== LEAK SUMMARY:<br>==10781==    definitely lost: 40 bytes <span class="hljs-keyword">in</span> 1 blocks<br>==10781==    indirectly lost: 0 bytes <span class="hljs-keyword">in</span> 0 blocks<br>==10781==      possibly lost: 0 bytes <span class="hljs-keyword">in</span> 0 blocks<br>==10781==    still reachable: 0 bytes <span class="hljs-keyword">in</span> 0 blocks<br>==10781==         suppressed: 0 bytes <span class="hljs-keyword">in</span> 0 blocks<br>==10781== <br>==10781== For lists of detected and suppressed errors, rerun with: -s<br>==10781== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)<br></code></pre></div></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++基础高频提问</title>
    <url>/2022/05/02/C++%E5%9F%BA%E7%A1%80%E9%AB%98%E9%A2%91%E6%8F%90%E9%97%AE/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hexo和github搭建个博</title>
    <url>/2022/05/01/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E5%8D%9A/</url>
    <content><![CDATA[<h1 id="1、工具"><a href="#1、工具" class="headerlink" title="1、工具"></a>1、工具</h1><ol>
<li>Node.js</li>
</ol>
<div class="note note-info">
            <p>官网：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p>
          </div>

<ol start="2">
<li>Git</li>
</ol>
<div class="note note-info">
            <p>官网：<a href="https://git-scm.com/">https://git-scm.com/</a></p>
          </div>

<p>验证安装是否完成，命令函输入：</p>
<figure class="highlight crmsh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span>、npm -v、git --<span class="hljs-keyword">version</span><br></code></pre></div></td></tr></table></figure>

<ol start="3">
<li>hexo下载，命令行输入：</li>
</ol>
<figure class="highlight avrasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g<br></code></pre></div></td></tr></table></figure>

<p>验证安装是否完成，命令行输入：</p>
<figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo -v</span><br></code></pre></div></td></tr></table></figure>

<h1 id="2、创建github仓库"><a href="#2、创建github仓库" class="headerlink" title="2、创建github仓库"></a>2、创建github仓库</h1><div class="note note-info">
            <p>仓库名：github账号名.github.io</p>
          </div>
<p>勾选创建readme文件</p>
<h1 id="3、生成ssh-key"><a href="#3、生成ssh-key" class="headerlink" title="3、生成ssh key"></a>3、生成ssh key</h1><div class="note note-info">
            <p>空白区域右击文件夹–&gt;Git Bash here</p>
          </div>
<p>输入ssh，检测电脑是否安装ssh</p>
<figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ ssh<br>usage: ssh [-46AaCfGgKkMNnqsTtVvXxYy] [-B bind_interface]<br>           [-b bind_address] [-c cipher_spec] [-D [bind_address:]port]<br>           [-E log_file] [-e escape_char] [-F configfile] [-I pkcs11]<br>           [-i identity_file] [-J [user@]host[:port]] [-L address]<br>           [-l login_name] [-m mac_spec] [-O ctl_cmd] [-o option] [-p port]<br>           [-Q query_option] [-R address] [-S ctl_path] [-W host:port]<br>           [-w local_tun[:remote_tun]] destination [<span class="hljs-built_in">command</span> [argument ...]]<br></code></pre></div></td></tr></table></figure>

<p>输入：</p>
<figure class="highlight excel"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;github账号邮箱&quot;</span><br></code></pre></div></td></tr></table></figure>

<p>四次回车后会在本地生成文件夹，路径：</p>
<div class="note note-info">
            <p>C:\Users\用户名.ssh\id_rsa.pub</p>
          </div>

<p>复制文件夹中的内容至</p>
<div class="note note-info">
            <p>github–&gt;Settings–&gt;SSH and GPG keys–&gt;New SSH key–&gt;Title随意–&gt;Key粘贴–&gt;Add SSH key</p>
          </div>

<p>验证是否绑定成功，输入指令：</p>
<figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ ssh -T git@github.com<br><br>Hi hiwushiyu! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></div></td></tr></table></figure>

<h1 id="4、本地生成博客内容"><a href="#4、本地生成博客内容" class="headerlink" title="4、本地生成博客内容"></a>4、本地生成博客内容</h1><div class="note note-info">
            <p>本地新建文件夹–&gt;空白处右击–&gt;Get Bash here</p>
          </div>

<ol>
<li>安装hexo</li>
</ol>
<figure class="highlight cmake"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo<br></code></pre></div></td></tr></table></figure>

<ol start="2">
<li>初始化hexo（文件夹中生成文件）</li>
</ol>
<figure class="highlight csharp"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><br></code></pre></div></td></tr></table></figure>

<ol start="3">
<li>本地生成静态页面</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo s<br>INFO  Validating config<br>INFO  Start processing<br>INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.<br></code></pre></div></td></tr></table></figure>

<p>浏览器输入网页<a href="http://localhost:4000/%EF%BC%8C%E5%8D%B3%E5%8F%AF%E6%9F%A5%E7%9C%8B">http://localhost:4000/，即可查看</a></p>
<ol>
<li>发布博客至github服务器</li>
</ol>
<div class="note note-info">
            <p>修改配置文件：_config.yml</p>
          </div>

<figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">仓库地址</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></div></td></tr></table></figure>

<div class="note note-info">
            <p>博客根目录下Get Bash here–&gt;安装自动化部署工具：npm install hexo-deployer-git –save</p>
          </div>

<p>生成页面：</p>
<figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br></code></pre></div></td></tr></table></figure>
<p>上传github（需要输入账号密码）：</p>
<figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></div></td></tr></table></figure>
<p>输入网址即可访问</p>
<h1 id="5、更新博客"><a href="#5、更新博客" class="headerlink" title="5、更新博客"></a>5、更新博客</h1><p>在路径source_posts下创建md文件，使用markdown语法编写<br>开头书写标题</p>
<figure class="highlight md"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs md">---<br><span class="hljs-section">title: 标题名</span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure>

<h1 id="6、更换主题"><a href="#6、更换主题" class="headerlink" title="6、更换主题"></a>6、更换主题</h1><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>按链接步骤安装新主题</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
